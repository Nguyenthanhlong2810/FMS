/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.opentcs.guing.components.dialogs;

import org.opentcs.database.access.ConfigurationDal;
import org.opentcs.guing.application.OpenTCSView;
import org.opentcs.guing.application.action.configuration.ConfigurationTableModel;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import javax.swing.*;

import org.opentcs.database.entity.AubotConfiguration;
import org.opentcs.guing.util.I18nPlantOverview;
import org.opentcs.guing.util.ResourceBundleUtil;

/**
 *
 * @author Yue
 */
public class ConfigurationForm
    extends javax.swing.JFrame
    implements WindowListener {

  private static final ResourceBundleUtil bundle = ResourceBundleUtil.getBundle(I18nPlantOverview.CONFIGURATION_PATH);

  private OpenTCSView view;

  private ConfigurationTableModel confTableModel;

  private final ConfigurationDal dal;

  private long currentConfig = 0;
  /**
   * Creates new form ConfigurationForm
   *
   * @param view
   */
  public ConfigurationForm(OpenTCSView view) {
    this.view = view;
    initComponents();

    dal = new ConfigurationDal();
    this.addWindowListener(this);
    this.setLocationRelativeTo(null);

    initTable();
    initDialog();
  }

  private void initTable() {
    confTableModel = new ConfigurationTableModel(new ArrayList<>());
    try {
      confTableModel = new ConfigurationTableModel(dal.getAll());

    } catch (Exception e) {

    }
    configurationTable.setModel(confTableModel);
  }

  private void initDialog() {
    editDialog.setSize(300, 150);
    editDialog.setLocationRelativeTo(null);
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    editDialog = new javax.swing.JDialog();
    editPanel = new javax.swing.JPanel();
    lblName = new javax.swing.JLabel();
    txtName = new javax.swing.JTextField();
    lblValue = new javax.swing.JLabel();
    txtValue = new javax.swing.JTextField();
    lblDescription = new javax.swing.JLabel();
    txtDescription = new javax.swing.JTextField();
    buttonsPanel = new javax.swing.JPanel();
    btnOk = new javax.swing.JButton();
    btnCancel = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    btnAdd = new javax.swing.JButton();
    btnModify = new javax.swing.JButton();
    btnRemove = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    configurationTable = new javax.swing.JTable();

    editPanel.setLayout(new java.awt.GridBagLayout());

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/org/opentcs/plantoverview/dialogs/configurationPanel"); // NOI18N
    lblName.setText(bundle.getString("editPanel.lblName.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
    editPanel.add(lblName, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.4;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 15);
    editPanel.add(txtName, gridBagConstraints);

    lblValue.setText(bundle.getString("editPanel.lblValue.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
    editPanel.add(lblValue, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.4;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 15);
    editPanel.add(txtValue, gridBagConstraints);

    lblDescription.setText(bundle.getString("editPanel.lblDescription.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
    editPanel.add(lblDescription, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.4;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 15);
    editPanel.add(txtDescription, gridBagConstraints);

    editDialog.getContentPane().add(editPanel, java.awt.BorderLayout.CENTER);

    buttonsPanel.setPreferredSize(new java.awt.Dimension(10, 30));

    btnOk.setText(bundle.getString("btnOK")); // NOI18N
    btnOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOkActionPerformed(evt);
      }
    });
    buttonsPanel.add(btnOk);

    btnCancel.setText(bundle.getString("btnCancel")); // NOI18N
    btnCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCancelActionPerformed(evt);
      }
    });
    buttonsPanel.add(btnCancel);

    editDialog.getContentPane().add(buttonsPanel, java.awt.BorderLayout.PAGE_END);

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    getContentPane().setLayout(new java.awt.BorderLayout(10, 0));

    jPanel1.setPreferredSize(new java.awt.Dimension(100, 150));

    btnAdd.setText(bundle.getString("table.btnAdd.text")); // NOI18N
    btnAdd.setPreferredSize(new java.awt.Dimension(100, 25));
    btnAdd.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAddActionPerformed(evt);
      }
    });
    jPanel1.add(btnAdd);

    btnModify.setText(bundle.getString("table.btnEdit.text")); // NOI18N
    btnModify.setPreferredSize(new java.awt.Dimension(100, 25));
    btnModify.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnModifyActionPerformed(evt);
      }
    });
    jPanel1.add(btnModify);

    btnRemove.setText(bundle.getString("table.btnRemove.text")); // NOI18N
    btnRemove.setPreferredSize(new java.awt.Dimension(100, 25));
    btnRemove.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnRemoveActionPerformed(evt);
      }
    });
    jPanel1.add(btnRemove);

    getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

    configurationTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {

      }
    ));
    jScrollPane1.setViewportView(configurationTable);

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    editDialog.setTitle(bundle.getString("editPanel.title.add"));
    editDialog.setVisible(true);
    currentConfig = 0;
  }//GEN-LAST:event_btnAddActionPerformed

  private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
    if (configurationTable.getSelectedRow() < 0) {
      return;
    }
    editDialog.setTitle("editPanel.title.edit");
    editDialog.setVisible(true);
    AubotConfiguration conf = confTableModel.getConfiguration(configurationTable.getSelectedRow());
    currentConfig = conf.getId();
    txtName.setText(conf.getName());
    txtValue.setText(conf.getValue());
    txtDescription.setText(conf.getDescription());
  }//GEN-LAST:event_btnModifyActionPerformed

  private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
    if (configurationTable.getSelectedRow() < 0) {
      return;
    }
    int confirm = JOptionPane.showConfirmDialog(null, bundle.getString("table.btnRemove.confirm.text"), "Really?", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
      AubotConfiguration conf = confTableModel.getConfiguration(configurationTable.getSelectedRow());
      if (dal.remove(conf.getId())) {
        confTableModel.removeElement(conf);
      }
    }
  }//GEN-LAST:event_btnRemoveActionPerformed

  private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
    AubotConfiguration conf = new AubotConfiguration(currentConfig, txtName.getText(), txtValue.getText(), txtDescription.getText());
    if (confTableModel.duplicateName(conf)) {
      JOptionPane.showMessageDialog(null, bundle.getString("table.btnAdd.duplicateError"));
      return;
    }
    if (conf.getId() == 0) {
      long id = dal.add(conf);
      if (id != 0) {
        conf.setId(id);
        confTableModel.addElement(conf);
      }
    } else {
      if (dal.modify(conf)) {
        confTableModel.modifyElement(conf);
      }
    }
    editDialog.setVisible(false);
  }//GEN-LAST:event_btnOkActionPerformed

  private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    editDialog.setVisible(false);
  }//GEN-LAST:event_btnCancelActionPerformed

  /**
   * @param args the command line arguments
   */
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnAdd;
  private javax.swing.JButton btnCancel;
  private javax.swing.JButton btnModify;
  private javax.swing.JButton btnOk;
  private javax.swing.JButton btnRemove;
  private javax.swing.JPanel buttonsPanel;
  private javax.swing.JTable configurationTable;
  private javax.swing.JDialog editDialog;
  private javax.swing.JPanel editPanel;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblDescription;
  private javax.swing.JLabel lblName;
  private javax.swing.JLabel lblValue;
  private javax.swing.JTextField txtDescription;
  private javax.swing.JTextField txtName;
  private javax.swing.JTextField txtValue;
  // End of variables declaration//GEN-END:variables

  @Override
  public void windowOpened(WindowEvent e) {}

  @Override
  public void windowClosing(WindowEvent e) {
    try {
      view.notifyConfigurationChanged();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, bundle.getString("kernelError"));
    }
  }

  @Override
  public void windowClosed(WindowEvent e) {}

  @Override
  public void windowIconified(WindowEvent e) {}

  @Override
  public void windowDeiconified(WindowEvent e) {}

  @Override
  public void windowActivated(WindowEvent e) {}

  @Override
  public void windowDeactivated(WindowEvent e) {}
}
