package org.opentcs.guing.application.action.report.form;

import org.opentcs.guing.application.OpenTCSView;
import org.opentcs.guing.application.action.report.config.VehicleStatus;
import org.opentcs.guing.components.dialogs.EmailAddressForm;
import org.opentcs.guing.util.I18nPlantOverview;
import org.opentcs.guing.util.ResourceBundleUtil;
import org.opentcs.util.gui.Icons;

import javax.swing.*;
import javax.xml.crypto.Data;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.util.Calendar;
import java.util.List;

public class ReportFrame extends JFrame {

    private OpenTCSView view;
    /**
     * Creates new form FormMain
     * @param view
     */
    public ReportFrame(OpenTCSView view) {
        this.view = view;
        setTitle(labels.getString("reportFrame.frame.title"));
        List<Image> icons = Icons.getOpenTCSIcons();
        setIconImage(icons.get(0));
        initComponents();
        State_cbx.setEnabled(false);
        enableState();
        dateStart.setDateFormatString("dd-MM-yyyy");
        dateEnd.setDateFormatString("dd-MM-yyyy");
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_MONTH, 1);
        dateEnd.setDate(cal.getTime());
        cal.add(Calendar.MONTH, -1);
        dateStart.setDate(cal.getTime());
        this.setLocationRelativeTo(null);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypes = new javax.swing.ButtonGroup();
        actiReport_Type = new javax.swing.JRadioButton();
        vehiReport_Type = new javax.swing.JRadioButton();
        errReport_Type = new javax.swing.JRadioButton();
        vehicle_active_time_type = new JRadioButton();
        panelTop = new javax.swing.JPanel();
        panelTopLeft = new javax.swing.JPanel();
        panelTopRight = new javax.swing.JPanel();
        dateStart_label = new javax.swing.JLabel();
        dateStart = new com.toedter.calendar.JDateChooser();
        dateEnd_label = new javax.swing.JLabel();
        dateEnd = new com.toedter.calendar.JDateChooser();
        btn_showResult = new javax.swing.JButton();
        State_cbx = new javax.swing.JComboBox<>();
        State_label = new javax.swing.JLabel();
        panelImformation = new javax.swing.JPanel();
        panelResult = new javax.swing.JPanel();
        lbResult = new javax.swing.JLabel();
        lbresultTotal = new javax.swing.JLabel();
        panelTable = new javax.swing.JPanel();
        ico_Chart = new javax.swing.JLabel();
        btn_overViewError = new JButton();
        btn_sendErrorEmail = new JButton();


        btn_sendErrorEmail.setVisible(false);
        btn_overViewError.setVisible(false);
        actiReport_Type.addActionListener(e -> {
            if (actiReport_Type.isSelected()){
                btn_overViewError.setVisible(false);
                btn_sendErrorEmail.setVisible(false);
            }
        });
        vehiReport_Type.addActionListener(e -> {
            if (vehiReport_Type.isSelected()){
                btn_overViewError.setVisible(false);
                btn_sendErrorEmail.setVisible(false);
            }
        });
        errReport_Type.addActionListener(e ->{
            if (errReport_Type.isSelected()){
                btn_overViewError.setVisible(true);
                btn_sendErrorEmail.setVisible(true);
             }
        });
        vehicle_active_time_type.addActionListener(e -> {
            if (vehicle_active_time_type.isSelected()){
                btn_overViewError.setVisible(false);
                btn_sendErrorEmail.setVisible(false);
            }
        });
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 800));
        getContentPane().setLayout(new java.awt.BorderLayout(0, 5));

        panelTop.setPreferredSize(new java.awt.Dimension(700, 100));
        panelTop.setLayout(new java.awt.BorderLayout());

        panelTopLeft.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),
                labels.getString("reportFrame.bordertitle.reporttype") ,
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 102, 255))); // NOI18N
        panelTopLeft.setMinimumSize(new java.awt.Dimension(100, 0));
        panelTopLeft.setPreferredSize(new java.awt.Dimension(200, 100));
        panelTopLeft.setLayout(new java.awt.GridLayout(4, 0));

        reportTypes.add(actiReport_Type);
        actiReport_Type.setSelected(true);
        actiReport_Type.setText(labels.getString("reportFrame.radiobtn.activityOption"));
        //panelTopLeft.add(actiReport_Type);

        reportTypes.add(vehiReport_Type);
        vehiReport_Type.setText(labels.getString("reportFrame.radiobtn.operationOption"));
        //panelTopLeft.add(vehiReport_Type);

        reportTypes.add(errReport_Type);
        errReport_Type.setText(labels.getString("reportFrame.radiobtn.error"));
        panelTopLeft.add(errReport_Type);
        //add option vehicle log time
        reportTypes.add(vehicle_active_time_type);
        vehicle_active_time_type.setText(labels.getString("reportFrame.radiobtn.TimeActiveVehicle"));
        panelTopLeft.add(vehicle_active_time_type);

        panelTop.add(panelTopLeft, java.awt.BorderLayout.LINE_START);

        panelTopRight.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), labels.getString("reportFrame.bordertitle.time"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 102, 255))); // NOI18N
        panelTopRight.setPreferredSize(new java.awt.Dimension(450, 100));
        panelTopRight.setLayout(new java.awt.GridBagLayout());
        GridBagConstraints bound;
        dateStart_label.setText(labels.getString("reportFrame.bordertitle.datefrom"));
        bound = new java.awt.GridBagConstraints();
        bound.weightx = 0.1;
        bound.weighty = 0.1;
        panelTopRight.add(dateStart_label, bound);
        dateStart_label.getAccessibleContext().setAccessibleName("từ ngày ");

        dateStart.setPreferredSize(new java.awt.Dimension(150, 25));
        dateStart.getJCalendar().setPreferredSize(new Dimension(300,250));
        dateStart.setFont(new Font("Arial",Font.PLAIN,15));
        bound = new GridBagConstraints();
        bound.gridx = 1;
        bound.fill = GridBagConstraints.HORIZONTAL;
        bound.weightx = 0.8;
        bound.weighty = 0.1;
        bound.insets = new java.awt.Insets(0, 0, 0, 30);
        panelTopRight.add(dateStart, bound);

        dateEnd_label.setText(labels.getString("reportFrame.bordertitle.dateto"));
        bound = new java.awt.GridBagConstraints();
        bound.gridx = 2;
        bound.gridy = 0;
        bound.weightx = 0.1;
        bound.weighty = 0.1;
        panelTopRight.add(dateEnd_label, bound);

        dateEnd.setPreferredSize(new java.awt.Dimension(150, 25));
        dateEnd.getJCalendar().setPreferredSize(new Dimension(300,250));
        dateEnd.setFont(new Font("Arial",Font.PLAIN,15));
        bound = new java.awt.GridBagConstraints();
        bound.gridx = 3;
        bound.gridy = 0;
        bound.fill = GridBagConstraints.HORIZONTAL;
        bound.weightx = 0.8;
        bound.weighty = 0.1;
        panelTopRight.add(dateEnd, bound);


        bound = new GridBagConstraints();
        bound.gridx = 1;
        bound.gridy = 1;
        bound.fill = GridBagConstraints.HORIZONTAL;
        bound.weightx = 0.8;
        bound.weighty = 0.3;
        bound.insets = new java.awt.Insets(0, 0, 0, 30);
        //panelTopRight.add(State_cbx, bound);



        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout( new GridBagLayout());
        bound = new java.awt.GridBagConstraints();
        bound.gridx = 3;
        bound.gridy = 1;
        panelTopRight.add(buttonPanel,bound);

            bound.gridx = 0;
            bound.gridy = 0;
            bound.weightx = 0.1;
            bound.weighty = 0.1;
            bound.insets = new java.awt.Insets(5, 5, 5, 5);
                btn_showResult.setBackground(Color.BLUE);
                btn_showResult.setForeground(new java.awt.Color(0,0,0));
                btn_showResult.setText(labels.getString("reportFrame.button.showResult"));
            buttonPanel.add(btn_showResult, bound);
            bound.gridx = 1;
                btn_overViewError.setBackground(Color.BLUE);
                btn_overViewError.setText(labels.getString("reportFrame.button.overviewErrors"));
            buttonPanel.add(btn_overViewError,bound);
            bound.gridx = 2 ;
                btn_sendErrorEmail.setBackground(Color.BLUE);
                btn_sendErrorEmail.setText(labels.getString("reportFrame.button.sendEmail"));
            buttonPanel.add(btn_sendErrorEmail,bound);
            btn_showResult.addActionListener(this::btn_showResultActionPerformed);
            btn_overViewError.addActionListener(this::showOverviewErrors);
            btn_sendErrorEmail.addActionListener(this::sendErrorEmail);



        State_cbx.addItem("*--ALL--*");
        State_cbx.addItem(VehicleStatus.VEHICLE_STARTS_PROCESSING.toString());
        State_cbx.addItem(VehicleStatus.VEHICLE_STARTS_WAITING.toString());
        State_cbx.addItem(VehicleStatus.VEHICLE_STOPS_PROCESSING.toString());
        State_cbx.addItem(VehicleStatus.VEHICLE_STOPS_WAITING.toString());
        State_cbx.addItem(VehicleStatus.VEHICLE_STARTS_CHARGING.toString());
        State_cbx.addItem(VehicleStatus.VEHICLE_STOPS_CHARGING.toString());

        State_label.setText(labels.getString("reportFrame.lable.status"));
        bound = new java.awt.GridBagConstraints();
        bound.gridx = 0;
        bound.gridy = 1;
        bound.weightx = 0.1;
        bound.weighty = 0.1;
        //panelTopRight.add(State_label, bound);

        ico_Chart.setHorizontalAlignment(JLabel.CENTER);
        ico_Chart.setIcon(new ImageIcon(getClass().getResource("/org/opentcs/guing/res/symbols/menu/statistics32a.png")));
        ico_Chart.setPreferredSize(new java.awt.Dimension(32,32 ));
        bound = new java.awt.GridBagConstraints();
        bound.gridx = 2;
        bound.gridy = 1;
        ico_Chart.setVisible(false);
        panelTopRight.add(ico_Chart, bound);
        ico_Chart.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                ActionChart();
            }
        });

        panelTop.add(panelTopRight, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelTop, java.awt.BorderLayout.PAGE_START);

        panelImformation.setLayout(new java.awt.BorderLayout());

        panelResult.setPreferredSize(new java.awt.Dimension(700, 35));
        panelResult.setRequestFocusEnabled(false);
        panelResult.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lbResult.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbResult.setForeground(new java.awt.Color(255, 102, 102));
        lbResult.setText(labels.getString("reportFrame.lable.resulttotal"));
        lbResult.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 102, 102)));
        lbResult.setVisible(false);
        panelResult.add(lbResult);

        lbresultTotal.setBackground(new java.awt.Color(255, 255, 102));
        lbresultTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbresultTotal.setForeground(new java.awt.Color(51, 102, 255));
        lbresultTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbresultTotal.setText("0");
        lbresultTotal.setPreferredSize(new java.awt.Dimension(150, 25));
        lbresultTotal.setVisible(false);
        panelResult.add(lbresultTotal);

        panelImformation.add(panelResult, java.awt.BorderLayout.PAGE_START);

        panelTable.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), labels.getString("reportFrame.bordertitle.imformation"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 102, 255))); // NOI18N
        panelTable.setLayout(new java.awt.BorderLayout());
        panelImformation.add(panelTable, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelImformation, java.awt.BorderLayout.CENTER);

        actiReport_Type.addActionListener(e -> enableState());
        vehiReport_Type.addActionListener(e -> enableState());
        errReport_Type.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                enableState();
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Action when you choose option, it will show the table.
     * @param evt
     */
    private void btn_showResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_showResultActionPerformed
        if(dateStart.getDate() != null && dateEnd.getDate() != null){
            java.util.Date dateStartUtil =  dateStart.getDate();
            java.util.Date dateEndUtil =  dateEnd.getDate();
            Date dateStart = new Date(dateStartUtil.getTime());
            Date dateEnd = new Date(dateEndUtil.getTime());
            dateEnd = new Date(dateEnd.getTime() + 24*60*60*1000 ); //add 1 day more to dateEnd

            panelTable.removeAll();
            ico_Chart.setVisible(true);
            lbResult.setVisible(true);
            lbresultTotal.setVisible(true);
            switch (getSelectedReport()) {
                case 1:
                    ActivitiesPanel activitiesPanel = new ActivitiesPanel(dateStart, dateEnd);
                    panelTable.add(activitiesPanel, BorderLayout.CENTER);
                    lbresultTotal.setText(String.valueOf(activitiesPanel.getResultTotal()));
                    break;
                case 2:
                    VehiclePanel vehiclePanel = new VehiclePanel(dateStart, dateEnd, State_cbx.getItemAt(State_cbx.getSelectedIndex()));
                    panelTable.add(vehiclePanel);
                    lbresultTotal.setText(String.valueOf(vehiclePanel.getResultTotal()));
                    break;
                case 3:
                    ErrorPanel errorPanel = new ErrorPanel(dateStart, dateEnd);
                    panelTable.add(errorPanel);
                    lbresultTotal.setText(String.valueOf(errorPanel.getResultTotal()));
                    break;
                case 4:
                    VehicleActiveTimePanel vehicleActiveTimePanel = new VehicleActiveTimePanel(dateStart,dateEnd);
                    panelTable.add(vehicleActiveTimePanel);
                    lbresultTotal.setText(String.valueOf(vehicleActiveTimePanel.getResultTotal()));
                    break;
                default:
                    break;
            }
        }else {
            JOptionPane.showMessageDialog(null,labels.getString("reportFrame.button.showwarning"),
                    labels.getString("reportFrame.button.warning"),JOptionPane.WARNING_MESSAGE);
        }
        this.validate();
    }//GEN-LAST:event_btn_showResultActionPerformed


    /**
     * Click icon Chart on form , form Chart will be display
     */
    public void ActionChart(){
        if(dateStart.getDate() != null && dateEnd.getDate() != null){
            java.util.Date dateStartUtil =  dateStart.getDate();
            java.util.Date dateEndUtil =  dateEnd.getDate();
            Date dateStart = new Date(dateStartUtil.getTime());
            Date dateEnd = new Date(dateEndUtil.getTime());
            dateEnd = new Date(dateEnd.getTime() + 24*60*60*1000 ); //add 1 day more to deathEnd
            switch (getSelectedReport()){
                case 1:
                    new Chart(dateStart, dateEnd, 0).setVisible(true);
                    break;
                case 2:
                    new Chart(dateStart, dateEnd, 1).setVisible(true);
                    break;
                case 3:
                    new Chart(dateStart,dateEnd,2).setVisible(true);
                    break;
                case 4:
                    new Chart(dateStart,dateEnd,3).setVisible(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(null,"You need to choose Report Type");
                    break;
            }
        }
    }

    /**
     * Return the choose
     * @return
     */
    public int getSelectedReport() {
        if (actiReport_Type.isSelected()) {
            return 1;
        }
        if (vehiReport_Type.isSelected()) {
            return 2;
        }
        if (errReport_Type.isSelected()) {
            return 3;
        }
        if (vehicle_active_time_type.isSelected())
        {
            return 4;
        }
        return 0;
    }
    public void enableState(){
        State_cbx.setEnabled(vehiReport_Type.isSelected());
    }
    private void sendErrorEmail(ActionEvent actionEvent) {
        if(dateStart.getDate() != null && dateEnd.getDate() != null){
            Date fromDate = new Date(dateStart.getDate().getTime());
            Date toDate = new Date(dateEnd.getDate().getTime());
            new EmailAddressForm(fromDate, toDate, view).setVisible(true);
        }else {
            JOptionPane.showMessageDialog(null,labels.getString("reportFrame.button.showwarning"),
                    labels.getString("reportFrame.button.warning"),JOptionPane.WARNING_MESSAGE);
        }
    }
    private  void showOverviewErrors(ActionEvent e){
        if(dateStart.getDate() != null && dateEnd.getDate() != null){
            java.util.Date dateStartUtil =  dateStart.getDate();
            java.util.Date dateEndUtil =  dateEnd.getDate();
            Date dateStart = new Date(dateStartUtil.getTime());
            Date dateEnd = new Date(dateEndUtil.getTime());
            panelTable.removeAll();
            OverviewErrorsPanel overviewErrorsPanel = new OverviewErrorsPanel(dateStart,dateEnd);
            panelTable.add(overviewErrorsPanel);
        }else {
            JOptionPane.showMessageDialog(null,labels.getString("reportFrame.button.showwarning"),
                    labels.getString("reportFrame.button.warning"),JOptionPane.WARNING_MESSAGE);
        }
        this.validate();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final ResourceBundleUtil labels = ResourceBundleUtil.getBundle(I18nPlantOverview.REPORT_PATH);

    private javax.swing.JButton btn_showResult;
    private com.toedter.calendar.JDateChooser dateStart;
    private com.toedter.calendar.JDateChooser dateEnd;
    private JLabel dateStart_label;
    private javax.swing.JLabel dateEnd_label;
    private javax.swing.JComboBox<String> State_cbx;
    private javax.swing.JLabel lbResult;
    private javax.swing.JLabel State_label;
    private javax.swing.JPanel panelTop;
    private javax.swing.JPanel panelTopRight;
    private javax.swing.JPanel panelImformation;
    private javax.swing.JPanel panelTopLeft;
    private javax.swing.JPanel panelResult;
    private javax.swing.JPanel panelTable;
    private javax.swing.JLabel lbresultTotal;
    private javax.swing.ButtonGroup reportTypes;
    private JRadioButton vehicle_active_time_type;
    private javax.swing.JRadioButton vehiReport_Type;
    private javax.swing.JRadioButton errReport_Type;
    private javax.swing.JRadioButton actiReport_Type;
    private javax.swing.JLabel ico_Chart;
    private JButton btn_overViewError;
    private JButton btn_sendErrorEmail;
}
